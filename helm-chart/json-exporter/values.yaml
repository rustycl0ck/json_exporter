# Default values for json-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: prometheuscommunity/json-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "7979"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# extraVolumes and extraVolumeMounts allows you to mount other volumes
# Example Use Case: mount basic auth credentials from a secret to a file on the pod
# extraVolumes:
#   - name: basic-auth
#     secret:
#       secretName: json-exporter-basic-auth
# extraVolumeMounts:
#   - name: basic-auth
#     mountPath: /credentials
#     readOnly: true

extraArgs:
  - --log.format
  - json

config:
  metrics:
    - name: example_global_value
      path: $.counter
      help: Example of a top-level global value scrape in the json
      labels:
        environment: beta # static label
        location: $.location          # dynamic label
    - name: example_value
      type: object
      help: Example of sub-level value scrapes from a json
      path: $.values[*]?(@.state == "ACTIVE")
      labels:
        environment: beta # static label
        id: $.id          # dynamic label
      values:
        active: 1      # static value
        count: $.count # dynamic value
        boolean: $.some_boolean
#   headers:
#     X-Dummy: my-test-header
#   
#   For full http client config parameters, ref: https://pkg.go.dev/github.com/prometheus/common/config?tab=doc#HTTPClientConfig
#   http_client_config:
#     tls_config:
#       insecure_skip_verify: true
#     basic_auth:
#       username: myuser
#       #password: veryverysecret # Security issue, do no provide or store password this way, use the password_file method
#       password_file: /tmp/mysecret.txt
 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
